AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  CoAutoBackend

  Sample SAM Template for CoAuto_Backend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  UserApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: UserApi
      StageName: Prod
  CarApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: CarApi
      StageName: Prod
  RateApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: RateApi
      StageName: Prod

  GetDataUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_data_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataUser:
          Type: Api
          Properties:
            RestApiId: !Ref UserApi
            Path: /get_data
            Method: get

  InsertDataUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: insert_data_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref UserApi
            Path: /insert_data
            Method: post

  UpdateDataUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update_data_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref UserApi
            Path: /update_data
            Method: put

  DeleteDataUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: delete_data_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref UserApi
            Path: /delete_data
            Method: delete

  GetDataCarFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_data_car/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataCar:
          Type: Api
          Properties:
            RestApiId: !Ref CarApi
            Path: /get_data
            Method: get

  GetDataRateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_data_rate/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataCar:
          Type: Api
          Properties:
            RestApiId: !Ref RateApi
            Path: /get_data
            Method: get

  GetOneDataRateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_data_one_rate/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataCar:
          Type: Api
          Properties:
            RestApiId: !Ref RateApi
            Path: /get_data_one
            Method: get

  InsertDataCarFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: insert_data_car/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref CarApi
            Path: /insert_data
            Method: post
  DeleteDataCarFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: delete_data_car/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref CarApi
            Path: /delete_data
            Method: delete

Outputs:
  GetDataUserApiUrl:
    Description: "API Gateway endpoint URL with path get_data for Prod stage to User Model"
    Value: !Sub "https://${UserApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_data"
  InsertDataUserApiUrl:
    Description: "API Gateway endpoint URL with path insert_data for Prod stage to User Model"
    Value: !Sub "https://${UserApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/insert_data"
  UpdateDataUserApiUrl:
    Description: "API Gateway endpoint URL with path update_data for Prod stage to User Model"
    Value: !Sub "https://${UserApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update_data"
  DeleteDataUserApiUrl:
    Description: "API Gateway endpoint URL with path delete_data for Prod stage to User Model"
    Value: !Sub "https://${UserApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/delete_data"
  GetDataCarApiUrl:
    Description: "API Gateway endpoint URL with path get_data for Prod stage to Car Model"
    Value: !Sub "https://${CarApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_data"
  GetDataRateApiUrl:
    Description: "API Gateway endpoint URL with path get_data for Prod stage to Rate Model"
    Value: !Sub "https://${RateApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_data"
  GetDataOneRateApiUrl:
    Description: "API Gateway endpoint URL with path get_data_one for Prod stage to Rate Model"
    Value: !Sub "https://${RateApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_data_one"
  GetDataUserFunctionArn:
    Description: "Get data user Lambda Function ARN"
    Value: !GetAtt GetDataUserFunction.Arn
  InsertDataUserFunctionArn:
    Description: "Insert data user Lambda Function ARN"
    Value: !GetAtt InsertDataUserFunction.Arn
  UpdateDataUserFunctionArn:
    Description: "Update data user Lambda Function ARN"
    Value: !GetAtt UpdateDataUserFunction.Arn
  DeleteDataUserFunctionArn:
    Description: "Delete data user Lambda Function ARN"
    Value: !GetAtt DeleteDataUserFunction.Arn
  GetDataCarFunctionArn:
    Description: "Get data car Lambda Function ARN"
    Value: !GetAtt GetDataCarFunction.Arn
  GetDataRateFunctionArn:
    Description: "Get data rate Lambda Function ARN"
    Value: !GetAtt GetDataRateFunction.Arn
  GetOneDataRateFunctionArn:
    Description: "Get data One rate Lambda Function ARN"
    Value: !GetAtt GetOneDataRateFunction.Arn
  InsertDataCarApiUrl:
    Description: "API Gateway endpoint URL with path insert_data for Prod stage to Car Model"
    Value: !Sub "https://${CarApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/insert_data"
  DeleteDataCarFunctionArn:
    Description: "Delete data car Lambda Function ARN"
    Value: !GetAtt DeleteDataCarFunction.Arn
  LambdaExecutionRoleArn:
    Description: "Lambda Execution Role ARN"
    Value: !GetAtt LambdaExecutionRole.Arn