AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  CoAutoBackend

  App CoAutoBackend para Desarrollo Web Integral

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicExecution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
        - PolicyName: SSMGetParameter
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: 'arn:aws:secretsmanager:us-east-1:*'
        - PolicyName: CognitoAdminInitiateAuth
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cognito-idp:AdminInitiateAuth
                  - cognito-idp:AdminRespondToAuthChallenge
                  - cognito-idp:AdminSetUserPassword
                  - cognito-idp:AdminCreateUser
                  - cognito-idp:AdminDeleteUser
                  - cognito-idp:AdminUpdateUserAttributes
                  - cognito-idp:AdminListGroupsForUser
                  - cognito-idp:AdminAddUserToGroup
                  - cognito-idp:AdminRemoveUserFromGroup
                  - cognito-idp:AdminGetUser
                  - cognito-idp:AdminGetUserAttributeVerificationCode
                  - cognito-idp:AdminConfirmSignUp
                  - cognito-idp:AdminForgetDevice
                  - cognito-idp:AdminConfirmDevice
                  - cognito-idp:AdminUpdateDeviceStatus
                  - cognito-idp:AdminEnableUser
                  - cognito-idp:AdminDisableUser
                  - cognito-idp:AdminResetUserPassword
                  - cognito-idp:AdminSetUserSettings
                  - cognito-idp:AdminUpdateAuthEventFeedback
                  - cognito-idp:AdminUserGlobalSignOut
                Resource: 'arn:aws:cognito-idp:us-east-1:*:*'

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: CognitoUserPool
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: True
          RequireLowercase: True
          RequireNumbers: True
          RequireSymbols: True

  AdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: AdminUserGroup
      UserPoolId: !Ref CognitoUserPool
      Precedence: 1

  ClientUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: ClientUserGroup
      UserPoolId: !Ref CognitoUserPool
      Precedence: 2

  UserApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: UserApi
      StageName: Prod
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'*'"
        AllowMethods: "'OPTIONS,POST,GET,PUT,DELETE'"
      Auth:
         DefaultAuthorizer: UserAuthorizer
         Authorizers:
            UserAuthorizer:
              UserPoolArn: !GetAtt CognitoUserPool.Arn
  CarApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: CarApi
      StageName: Prod
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'*'"
        AllowMethods: "'OPTIONS,POST,GET,PUT,DELETE'"
      Auth:
        DefaultAuthorizer: CarAuthorizer
        Authorizers:
          CarAuthorizer:
            UserPoolArn: !GetAtt CognitoUserPool.Arn

  RateApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: RateApi
      StageName: Prod
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'*'"
        AllowMethods: "'OPTIONS,POST,GET,PUT,DELETE'"

  CognitoApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: CognitoApi
      StageName: Prod
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'*'"
        AllowMethods: "'OPTIONS,POST,GET,PUT,DELETE'"

  CarAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: CarAuthorizerTest
      IdentitySource: method.request.header.Authorization
      RestApiId: !Ref CarApi
      Type: COGNITO_USER_POOLS
      ProviderARNs:
        - !GetAtt CognitoUserPool.Arn

  UserAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: UserAuthorizerTest
      IdentitySource: method.request.header.Authorization
      RestApiId: !Ref UserApi
      Type: COGNITO_USER_POOLS
      ProviderARNs:
        - !GetAtt CognitoUserPool.Arn

  GetDataCarFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: car/get_data_car/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataCar:
          Type: Api
          Properties:
            RestApiId: !Ref CarApi
            Path: /get_data
            Method: get
            Auth:
              Authorizer: CarAuthorizer

  GetDataUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user/get_data_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataUser:
          Type: Api
          Properties:
            RestApiId: !Ref UserApi
            Path: /get_data
            Method: get
            Auth:
              Authorizer: UserAuthorizer

  UpdateDataUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user/update_data_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref UserApi
            Path: /update_data
            Method: put

  DeleteDataUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: user/delete_data_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref UserApi
            Path: /delete_data
            Method: delete

  GetDataRateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: rate/get_data_rate/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataCar:
          Type: Api
          Properties:
            RestApiId: !Ref RateApi
            Path: /get_data
            Method: get

  InsertDataRateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: rate/insert_data_rate/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref RateApi
            Path: /insert_data
            Method: post

  GetDataOneRateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: rate/get_one_data_rate/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataCar:
          Type: Api
          Properties:
            RestApiId: !Ref RateApi
            Path: /get_data_one
            Method: get

  InsertDataCarFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: car/insert_data_car/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref CarApi
            Path: /insert_data
            Method: post
            Auth:
              Authorizer: CarAuthorizer

  DeleteDataCarFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: car/delete_data_car/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref CarApi
            Path: /delete_data
            Method: delete
            Auth:
              Authorizer: CarAuthorizer

  UpdateDataCarFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: car/update_data_car/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref CarApi
            Path: /update_data
            Method: put
            Auth:
              Authorizer: CarAuthorizer

  RegisterUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cognito/sign_up/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref CognitoApi
            Path: /register
            Method: post

  ConfirmSignUpFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cognito/confirm_sign_up/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref CognitoApi
            Path: /confirm_sign_up
            Method: post

  ResendConfirmationCodeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cognito/resend_confirmation_code/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref CognitoApi
            Path: /resend_confirmation_code
            Method: post

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cognito/login/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref CognitoApi
            Path: /login
            Method: post

  GetInfoUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cognito/get_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetDataStudent:
          Type: Api
          Properties:
            RestApiId: !Ref CognitoApi
            Path: /get_user
            Method: post

Outputs:
  GetDataUserApiUrl:
    Description: "API Gateway endpoint URL with path get_data for Prod stage to User Model"
    Value: !Sub "https://${UserApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_data"
  UpdateDataUserApiUrl:
    Description: "API Gateway endpoint URL with path update_data for Prod stage to User Model"
    Value: !Sub "https://${UserApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update_data"
  DeleteDataUserApiUrl:
    Description: "API Gateway endpoint URL with path delete_data for Prod stage to User Model"
    Value: !Sub "https://${UserApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/delete_data"

  GetDataCarApiUrl:
    Description: "API Gateway endpoint URL with path get_data for Prod stage to Car Model"
    Value: !Sub "https://${CarApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_data"
  InsertDataCarApiUrl:
    Description: "API Gateway endpoint URL with path insert_data for Prod stage to Car Model"
    Value: !Sub "https://${CarApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/insert_data"
  UpdateDataCarApiUrl:
    Description: "API Gateway endpoint URL with path update_data for Prod stage to Car Model"
    Value: !Sub "https://${CarApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update_data"
  DeleteDataCarApiUrl:
    Description: "API Gateway endpoint URL with path delete_data for Prod stage to Car Model"
    Value: !Sub "https://${CarApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/delete_data"

  GetDataRateApiUrl:
    Description: "API Gateway endpoint URL with path get_data for Prod stage to Rate Model"
    Value: !Sub "https://${RateApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_data"
  InsertDataRateApiUrl:
    Description: "API Gateway endpoint URL with path insert_data for Prod stage to Rate Model"
    Value: !Sub "https://${RateApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/insert_data"

  SignUpUserApiUrl:
    Description: "API Gateway endpoint URL with path sign_up for Prod stage to Cognito Model"
    Value: !Sub "https://${CognitoApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/register"
  ConfirmSignUpApiUrl:
    Description: "API Gateway endpoint URL with path confirm_sign_up for Prod stage to Cognito Model"
    Value: !Sub "https://${CognitoApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/confirm_sign_up"
  ResendConfirmationCodeApiUrl:
    Description: "API Gateway endpoint URL with path resend_confirmation_code for Prod stage to Cognito Model"
    Value: !Sub "https://${CognitoApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/resend_confirmation_code"
  LoginApiUrl:
    Description: "API Gateway endpoint URL with path login for Prod stage to Cognito Model"
    Value: !Sub "https://${CognitoApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/login"
  GetInfoUserApiUrl:
    Description: "API Gateway endpoint URL with path get_user for Prod stage to Cognito Model"
    Value: !Sub "https://${CognitoApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get_user"

  GetDataUserFunctionArn:
    Description: "Get data user Lambda Function ARN"
    Value: !GetAtt GetDataUserFunction.Arn
  UpdateDataUserFunctionArn:
    Description: "Update data user Lambda Function ARN"
    Value: !GetAtt UpdateDataUserFunction.Arn
  DeleteDataUserFunctionArn:
    Description: "Delete data user Lambda Function ARN"
    Value: !GetAtt DeleteDataUserFunction.Arn

  GetDataCarFunctionArn:
    Description: "Get data car Lambda Function ARN"
    Value: !GetAtt GetDataCarFunction.Arn
  InsertDataCarFunctionArn:
    Description: "Insert data car Lambda Function ARN"
    Value: !GetAtt InsertDataCarFunction.Arn
  UpdateDataCarFunctionArn:
    Description: "Update data car Lambda Function ARN"
    Value: !GetAtt UpdateDataCarFunction.Arn
  DeleteDataCarFunctionArn:
    Description: "Delete data car Lambda Function ARN"
    Value: !GetAtt DeleteDataCarFunction.Arn

  GetDataRateFunctionArn:
    Description: "Get data rate Lambda Function ARN"
    Value: !GetAtt GetDataRateFunction.Arn
  GetDataOneRateFunctionArn:
    Description: "Get data one rate Lambda Function ARN"
    Value: !GetAtt GetDataOneRateFunction.Arn
  InsertDataRateFunctionArn:
    Description: "Insert data rate Lambda Function ARN"
    Value: !GetAtt InsertDataRateFunction.Arn

  RegisterUserFunctionArn:
    Description: "Register user Lambda Function ARN"
    Value: !GetAtt RegisterUserFunction.Arn
  ConfirmSignUpFunctionArn:
    Description: "Confirm sign up Lambda Function ARN"
    Value: !GetAtt ConfirmSignUpFunction.Arn
  ResendConfirmationCodeFunctionArn:
    Description: "Resend confirmation code Lambda Function ARN"
    Value: !GetAtt ResendConfirmationCodeFunction.Arn
  LoginFunctionArn:
    Description: "Login Lambda Function ARN"
    Value: !GetAtt LoginFunction.Arn
  GetInfoUserFunctionArn:
    Description: "Get info user Lambda Function ARN"
    Value: !GetAtt GetInfoUserFunction.Arn

  LambdaExecutionRoleArn:
    Description: "Lambda Execution Role ARN"
    Value: !GetAtt LambdaExecutionRole.Arn